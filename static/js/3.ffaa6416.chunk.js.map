{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","onChange","e","currentTarget","value","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","width","src","photos","large","userPhoto","alt","fullName","Preloader","Post","item","message","itemLike","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ffaa6416.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__211ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__oblJU\",\"posts\":\"MyPosts_posts__1sTkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2qeqO\",\"itemLike\":\"Post_itemLike__3s3Et\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"No status\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onBlur={deactivateEditMode}\n            onChange={onStatusChange}\n            value={status}\n            autoFocus={true}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import s from \"./ProfileInfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport userPhoto from \"../../../assets/images/profile-picture-not-found.png\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div className={s.descriptionBlock}>\n        <img\n          width=\"250px\"\n          src={\n            props.profile.photos.large != null\n              ? props.profile.photos.large\n              : userPhoto\n          }\n          alt=\"\"\n        />\n        <div>{props.profile.fullName}</div>\n        <ProfileStatusWithHooks\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img\n        src=\"https://vectorified.com/images/mystery-person-icon-34.jpg\"\n        alt=\"\"\n      />\n      {props.message}\n      <div className={s.itemLike}>Likes {props.likesCount}</div>\n    </div>\n  );\n};\n\nexport default Post;\n","import s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <div>\n          <Field\n            component={Textarea}\n            name=\"newPostText\"\n            placeholder=\"Enter your post text\"\n            validate={[required, maxLength10]}\n          ></Field>\n        </div>\n        <div>\n          <button>Send</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nlet AddNewPostFormRedux = reduxForm({\n  form: \"ProfileAddNewPostForm\",\n})(AddNewPostForm);\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((p) => {\n    return (\n      <Post\n        id={p.id}\n        message={p.message}\n        likesCount={p.likesCount}\n        key={p.id}\n      ></Post>\n    );\n  });\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.posts}>{postsElements}</div>\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import { addPostCreator } from \"./../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostCreator(newPostText));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport React from \"react\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport {\n  getStatus,\n  getUserProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n        />\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}